{"version":3,"sources":["src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["sections","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","target","classList","add","remove","threshold","section","observe","console","log","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","i","length","module"],"mappings":"ACAA,ACAA,IDAIkB,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,ADFJ,ICEIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFHJ,IEGIA,IAAI,CAACrB,MAAL;ADCF,ACAC,AFFH,GEAE,CFAIZ,KCEGkB,GDFK,GAAGjB,GCEf,KDFuB,CAACC,gBAAT,CAA0B,SAA1B,CAAjB;ACGC,ADFD,IAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAAAC,OAAO,EAAI;AEEnD6B,AFDE7B,EECF6B,AFDE7B,OECK,AFDE,CECDgC,AFDE/B,IECV,GAAe2B,AFDb,CAAgB,GECC,CAACI,IAAL,CAAUC,CFDP/B,IECH,CAAgB,AFDR,EAAI,CECZ,EAAqB,CAArB,IAA0B,GAA1B,GAAgCgC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDEP,AFDM,EECNA,IAAI,CAACQ,CFDKlC,CCEHa,IDFQ,CAACZ,GEChB,CAAgBkC,GDClB,GAAwB,MCDtB,CAA6BR,AFDnB,GAA0B,GAA9B,CECN,CFDyC,CECHD,IAAI,CAACU,WAA3C;ADEA,ACDD,AFDWpC,MAAAA,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;ACGV,ADFO,KAFD,CCIF,KDFS;ACGX,ACDJ,AFDYJ,IECRqC,EFDQrC,ICEF,CDFO,CAACE,ECEJY,ACDA,GAAG,CFDL,CCEF,ADFeX,ECErB,ACDJ,OFDY,CAAuBE,MAAvB,CAA8B,SAA9B;ACGT,ADFM,GCAP,CAEE,OAAOU,GAAP,EAAY;AACZ,ACFJ,AFAK,GAND,KCQIC,CCFCsB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGvB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AFAD,CARgB,EAQd,GEAGmB,UAAJ,EAAgB;ADEd,ACDA,AFAA/B,EAAAA,MCCIU,GDDK,EAAE,CAAC,CCCZ,EAAa,ADDF,EAAM,GAAN,EAAW,GAAX;ACET,ACDH,AFFA,CARc,CAAjB,WCWaG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,ADALvB,QAAQ,CAACM,OAAT,CAAiB,UAAAQ,OAAO,EAAI;ACCzB,ACDD8B,AFCAzC,EEDAyC,AFCAzC,QAAQ,CAACY,CEDC,GAAG+B,GFCb,CAAiBhC,MEDM,CAAC,AFCxB,YEDoC;AAClC,AFCFE,EAAAA,MEDM+B,CFCC,CAAC9B,GEDG,AFCX,CAAYH,EEDEb,KFCd,GEDsB,CAACC,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,ADAD,CAHD,QCGS,GAAP;AACD,ACFG,SAAK,IAAI8C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIlB,MAAM,CAACJ,UAAP,CAAkBqB,KAAK,CAACC,CAAD,CAAL,CAASX,IAA3B,MAAqCP,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,QAAAA,CDECN,SCFS,CDElB,ACFmBqB,CDECpB,GAApB,CCFwB,CDEC,ACFAqB,CAAD,CAAN,CAAV;ADGN,ACFK,SDEE,CAAC,KAAKrB,GAAN,EAAWC,OAAX,CAAmB,gFAAnB,EAAqG,IAArG,IAA6G,GAApH;AACD,ACFI;;ADILC,ACFIe,IAAAA,GDEG,CAACxB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AACAU,ACFG,GATsB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,UDWF,GAAqBA,UAArB;ACDC;;AAEDwB,MAAM,CAACrB,OAAP,GAAiBgB,SAAjB","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["import \"./animation.scss\";\r\nimport \"./styles.scss\";\r\n// import \"./scroll\";\r\n\r\nconst sections = document.querySelectorAll(\"section\")\r\nconst observer = new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n        if (entry.intersectionRatio > 0.1) {\r\n            entry.target.classList.add(\"in-view\");\r\n        } else {\r\n            entry.target.classList.remove(\"in-view\");\r\n        }\r\n    })\r\n}, {\r\n    threshold: [0.1, 0.3, 1.0]\r\n})\r\n\r\nsections.forEach(section => {\r\n  observer.observe(section)\r\n  console.log(section)\r\n})\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}